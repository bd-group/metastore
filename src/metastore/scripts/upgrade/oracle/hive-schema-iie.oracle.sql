-- Create DCS table and constraint
CREATE TABLE DCS
(
   DC_ID NUMBER NOT NULL,
   "DESC" varchar2(4000) NULL,
   DC_LOCATION_URI varchar2(4000) NOT NULL,
   "NAME" varchar2(128) NULL
);
ALTER TABLE DCS ADD CONSTRAINT DCS_PK PRIMARY KEY (DC_ID);

CREATE UNIQUE INDEX UNIQUE_DATACENTER ON DCS ("NAME");

-- Create NODES table and constraint
CREATE TABLE NODES
(
   NODE_ID number NOT NULL,
   IP varchar2(256) NULL,
   "NODE_NAME" varchar2(256) NULL,
   STATUS number NOT NULL
);

ALTER TABLE NODES ADD CONSTRAINT NODES_PK PRIMARY KEY (NODE_ID);

CREATE UNIQUE INDEX UNIQUENODE ON NODES (
  NODE_ID,
  "NODE_NAME"
);

-- Create DEVICES table and constraint
CREATE TABLE DEVICES
(
   DEV_ID number NOT NULL,
   "DEV_NAME" varchar2(256) NOT NULL,
   NODE_ID number NOT NULL
);

ALTER TABLE DEVICES ADD CONSTRAINT DEVICES_FK1 FOREIGN KEY (NODE_ID) REFERENCES NODES (NODE_ID) INITIALLY DEFERRED;

CREATE UNIQUE INDEX UNIQUEDEVICE ON DEVICES
(
  DEV_ID,
  "DEV_NAME"
);
ALTER TABLE DEVICES ADD CONSTRAINT DEVICES_PK PRIMARY KEY (DEV_ID);

-- Create FILES table and constraint
CREATE TABLE FILES
(
   FILE_ID number NOT NULL,
   ALL_RECORD_NR number NOT NULL,
   DIGEST varchar2(256),
   FID number NOT NULL,
   PLACEMENT number NOT NULL,
   RECORD_NR number NOT NULL,
   REP_NR number NOT NULL,
   STORE_STATUS number NOT NULL
);
ALTER TABLE FILES ADD CONSTRAINT FILES_PK PRIMARY KEY (FILE_ID);

CREATE UNIQUE INDEX UNIQUEFILE ON FILES
(
  FILE_ID,
  FID
);

-- Create FILE_LOCATION table and constraint
CREATE TABLE FILE_LOCATION
(
   LOCATION_ID number NOT NULL,
   DEV_ID number NOT NULL,
   DIGEST varchar2(256),
   FILE_ID number NOT NULL,
   LOCATION varchar2(4000) NOT NULL,
   NODE_ID number NOT NULL,
   REP_ID number NOT NULL,
   UPDATE_TIME number NOT NULL,
   VISIT_STATUS number NOT NULL
);

ALTER TABLE FILE_LOCATION ADD CONSTRAINT FILE_LOCATION_PK PRIMARY KEY (LOCATION_ID);

ALTER TABLE FILE_LOCATION ADD CONSTRAINT FILE_LOCATION_FK1 FOREIGN KEY (FILE_ID) REFERENCES FILES (FILE_ID) INITIALLY DEFERRED;

ALTER TABLE FILE_LOCATION ADD CONSTRAINT FILE_LOCATION_FK3 FOREIGN KEY (DEV_ID) REFERENCES DEVICES (DEV_ID) INITIALLY DEFERRED;

ALTER TABLE FILE_LOCATION ADD CONSTRAINT FILE_LOCATION_FK2 FOREIGN KEY (NODE_ID) REFERENCES NODES (NODE_ID) INITIALLY DEFERRED;

-- Create PARTITION_FILES table and constraint
REATE TABLE PARTITION_FILES
(
   PART_ID number NOT NULL,
   FID number,
   INTEGER_IDX number NOT NULL,
   CONSTRAINT PARTITION_FILES_PK PRIMARY KEY (PART_ID,INTEGER_IDX)
);

ALTER TABLE PARTITION_FILES ADD CONSTRAINT PARTITION_FILES_FK1 FOREIGN KEY (PART_ID) REFERENCES PARTITIONS (PART_ID) INITIALLY DEFERRED;

-- Create PARTITION_INDEX table and constraint
CREATE TABLE PARTITION_INDEX
(
   PART_INDEX_ID number PRIMARY KEY NOT NULL,
   INDEX_ID number,
   PART_ID number
);
ALTER TABLE PARTITION_INDEX ADD CONSTRAINT PARTITION_INDEX_FK2 FOREIGN KEY (PART_ID) REFERENCES PARTITIONS (PART_ID) INITIALLY DEFERRED;

ALTER TABLE PARTITION_INDEX ADD CONSTRAINT PARTITION_INDEX_FK1 FOREIGN KEY (INDEX_ID) REFERENCES IDXS (INDEX_ID) INITIALLY DEFERRED;

CREATE UNIQUE INDEX UNIQUEPARTITIONINDEX ON PARTITION_INDEX
(
  INDEX_ID,
  PART_ID
);

-- Create PARTITION_INDEX_STORE table and constraint
CREATE TABLE PARTITION_INDEX_STORE
(
   PART_INDEX_STORE_ID number PRIMARY KEY NOT NULL,
   FILE_ID number NOT NULL,
   FID number NOT NULL,
   PART_INDEX_ID number NOT NULL
);

ALTER TABLE PARTITION_INDEX_STORE ADD CONSTRAINT PARTITION_INDEX_STORE_FK1 FOREIGN KEY (FILE_ID) REFERENCES FILES (FILE_ID) INITIALLY DEFERRED;

ALTER TABLE PARTITION_INDEX_STORE ADD CONSTRAINT PARTITION_INDEX_STORE_FK2 FOREIGN KEY (PART_INDEX_ID) REFERENCES PARTITION_INDEX (PART_INDEX_ID) INITIALLY DEFERRED;

CREATE UNIQUE INDEX UNIQUEPARTITIONINDEXSTORE ON PARTITION_INDEX_STORE
(
  PART_INDEX_ID,
  FILE_ID
);

